{"version":3,"sources":["images/1.png","images/2.png","images/3.png","images/4.png","images/5.png","images/6.png","images/7.png","images/8.png","images/9.png","getWeb3.js","components/Button/index.js","components/TextField/index.js","components/Form/index.js","components/Display/index.js","pages/Main.js","components/Card/index.js","pages/Tutorial.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","Button","name","id","onClick","className","type","Input","value","onChange","placeholder","Form","nameTxt","idTxt","nameBtn","idBtn","Display","title","counter","Main","status","config","history","useHistory","useState","idAdd","setAddId","addressAdd","setAddAddress","idListen","setListenId","addressArtist","setArtist","idMusic","setMusic","idMusicUser","setUser","counterArtist","setCounterArtist","counterMusic","setCounterMusic","counterUser","setCounterUser","addMusic","accounts","contract","methods","send","from","listenMusic","musicStats","call","response","artistStats","musicianStats","userStats","error","alert","push","href","e","target","Card","image","instruction","class","src","alt","Tutorial","tutorial1","tutorial2","tutorial3","tutorial4","tutorial5","tutorial6","tutorial7","tutorial8","tutorial9","Routes","exact","path","component","App","state","componentDidMount","eth","getAccounts","net","getId","networkId","deployedNetwork","StreamingService","networks","instance","Contract","abi","address","setState","runExample","this","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.634329b4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.ae958b77.png\";","module.exports = __webpack_public_path__ + \"static/media/2.8a839e5a.png\";","module.exports = __webpack_public_path__ + \"static/media/3.45c6c5f3.png\";","module.exports = __webpack_public_path__ + \"static/media/4.f347678b.png\";","module.exports = __webpack_public_path__ + \"static/media/5.84ed76f7.png\";","module.exports = __webpack_public_path__ + \"static/media/6.c3c66067.png\";","module.exports = __webpack_public_path__ + \"static/media/7.f2a4dce8.png\";","module.exports = __webpack_public_path__ + \"static/media/8.0772010c.png\";","module.exports = __webpack_public_path__ + \"static/media/9.f15cb8e7.png\";","import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React from 'react';\nimport './style.css';\n\nconst Button = ({ name, id, onClick }) => {\n    return (\n        <div className=\"input-group-append\">\n            <button className=\"btn btn-info\" onClick={onClick} type=\"button\" id={id}>{name}</button>\n        </div>\n    );\n}\n\nexport default Button;","import React from 'react';\nimport './style.css';\n\nconst Input = ({ name, id, value, onChange }) => {\n    return (\n        <input type=\"text\" value={value} onChange={onChange} placeholder={name} className=\"form-control\" id={id} />\n    );\n}\n\nexport default Input;","import React from 'react';\nimport Input from '../TextField';\nimport Button from '../Button';\nimport './style.css';\n\nconst Form = ({ nameTxt, idTxt, nameBtn, idBtn, onClick, value, onChange }) => {\n    return (\n        <>\n            <div className=\"input-group mb-3\">\n                <Input name={nameTxt} id={idTxt} value={value} onChange={onChange} />\n                <Button name={nameBtn} id={idBtn} onClick={onClick} />\n            </div>\n        </>\n    );\n}\n\nexport default Form;","import React from 'react';\nimport './style.css';\n\nconst Display = ({ id, title, counter }) => {\n    return (\n        <div id=\"display\">\n            <div><p id=\"titleStats\"> {title} </p></div> <br />\n            <div id='circle'>\n                <p className='counter' id={id}>{counter}</p>\n                <p>vezes</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Display;","import React, { useState } from 'react';\nimport './style.css';\nimport Button from '../components/Button';\nimport Input from '../components/TextField';\nimport Form from '../components/Form';\nimport Display from '../components/Display';\nimport { useHistory } from \"react-router-dom\";\n\nconst Main = ({ status, config }) => {\n    const history = useHistory();\n    const [idAdd, setAddId] = useState(\"\");\n    const [addressAdd, setAddAddress] = useState(\"\");\n    const [idListen, setListenId] = useState(\"\");\n    const [addressArtist, setArtist] = useState(\"\");\n    const [idMusic, setMusic] = useState(\"\");\n    const [idMusicUser, setUser] = useState(\"\");\n\n    const [counterArtist, setCounterArtist] = useState(0);\n    const [counterMusic, setCounterMusic] = useState(0);\n    const [counterUser, setCounterUser] = useState(0);\n\n    const addMusic = async ({ accounts, contract }) => {\n        //add a music with id and artist address in smart contract.\n        await contract.methods.addMusic(idAdd, addressAdd).send({ from: accounts[0] });\n    };\n\n    const listenMusic = async ({ accounts, contract }) => {\n        await contract.methods.listenMusic(idListen).send({ from: accounts[0] });\n    };\n\n    const musicStats = async ({ contract }) => {\n        // Get the value from the contract to prove it worked.\n        const response = await contract.methods.musicStats(idMusic).call();\n        setCounterMusic(response);\n    };\n\n    const artistStats = async ({ contract }) => {\n        // Get the value from the contract to prove it worked.\n        const response = await contract.methods.musicianStats(addressArtist).call();\n        setCounterArtist(response);\n    };\n\n    const userStats = async ({ accounts, contract }) => {\n        // Get the value from the contract to prove it worked.\n        const response = await contract.methods.userStats(idMusicUser).call({ from: accounts[0] });\n        setCounterUser(response);\n    };\n\n    const error = () => {\n        alert(\n            `Failed to load web3, accounts, or contract. Check console for details. (Possível solução: verifique se a extensão Metamask está instalada e se está conectada a rede de testes Rinkeby)`,\n        );\n    }\n\n    return (\n        <>\n            <div>\n                <div id=\"header\">\n                    <div>\n                        <div id=\"logo\">\n                        <h1>BLOCK</h1>\n                        <h1 id=\"fy\">FY</h1>\n                        </div>\n                        <p id=\"sub\">* É necessário o metamask instalado no navegador pra realizar qualquer ação.</p>\n                    </div>\n                    <div id=\"etherscan\">\n                    <Button name=\"Como instalar o metamask\" onClick={() => history.push(\"/tutorial\")} />\n                        <a href=\"https://rinkeby.etherscan.io/address/0x22b5bd3a5cd61677e7c2de7b06e7d262444b02dd\">Rastrear pelo Etherscan</a>\n                    </div>\n                </div>\n            </div>\n            <br />\n            <div id='form'>\n                <div className=\"input-group mb-3\">\n                    <Input value={idAdd} onChange={(e) => setAddId(e.target.value)} name=\"ID da música\" id=\"txtMscAdd\" />\n                    <Input value={addressAdd} onChange={(e) => setAddAddress(e.target.value)} name=\"Address do artista\" id=\"txtArtAdd\" />\n                    <Button name=\"Adicionar música\" id=\"btnAdd\" onClick={status ? () => addMusic(config) : () => error()} />\n                </div>\n\n                <Form value={idListen} nameTxt=\"ID da música\" idTxt=\"txtListen\" nameBtn=\"Escutar música\" idBtn=\"btnListen\" onChange={(e) => setListenId(e.target.value)} onClick={status ? () => listenMusic(config) : () => error()} />\n                <Form value={addressArtist} nameTxt=\"Address do artista\" idTxt=\"txtArt\" nameBtn=\"Estatísticas do artista\" idBtn=\"btnArt\" onChange={(e) => setArtist(e.target.value)} onClick={status ? () => artistStats(config) : () => error()} />\n                <Form value={idMusic} nameTxt=\"ID da música\" idTxt=\"txtMsc\" nameBtn=\"Estatísticas da música\" idBtn=\"btnMsc\" onChange={(e) => setMusic(e.target.value)} onClick={status ? () => musicStats(config) : () => error()} />\n                <Form value={idMusicUser} nameTxt=\"ID da música\" idTxt=\"txtUsr\" nameBtn=\"Suas estatísticas\" idBtn=\"btnUsr\" onChange={(e) => setUser(e.target.value)} onClick={status ? () => userStats(config) : () => error()} />\n            </div>\n            <br />\n\n            <div id='exibidor'>\n                <Display title=\"O artista foi tocado:\" id=\"artist\" counter={counterArtist} />\n                <Display title=\"A música foi tocada:\" id=\"music\" counter={counterMusic} />\n                <Display title=\"Você ouviu esta música:\" id=\"user\" counter={counterUser} />\n            </div>\n        </>\n    )\n}\n\nexport default Main","import React from 'react';\nimport './style.css';\n\nconst Card = ({ image, instruction }) => {\n    return (\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <p class=\"card-text\">{instruction}</p>\n            </div>\n            <img class=\"card-img-top\" src={image} alt=\"Imagem de capa do card\" />\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from '../components/Card';\nimport './style.css';\nimport tutorial1 from \"../images/1.png\";\nimport tutorial2 from \"../images/2.png\";\nimport tutorial3 from \"../images/3.png\";\nimport tutorial4 from \"../images/4.png\";\nimport tutorial5 from \"../images/5.png\";\nimport tutorial6 from \"../images/6.png\";\nimport tutorial7 from \"../images/7.png\";\nimport tutorial8 from \"../images/8.png\";\nimport tutorial9 from \"../images/9.png\";\n\nconst Tutorial = () => {\n    return (\n        <div id=\"tutorial\">\n            <br />\n            <div className=\"titleTutorial\">\n                <img src=\"https://lh3.googleusercontent.com/AWXpXmPH-dW_tkkj1eKu4EYA_HUE76CvMyYHp_MhiWbvS5VpgJWsC1pDRpbocc3EmGwELvh4A2g=w128-h128-e365\" alt=\"Raposa do Metamask\"/>\n                <h1>Tutorial do Metamask:</h1>\n            </div>\n\n            <br />\n            <div id=\"manualMetamask\">\n                <Card image={tutorial1} instruction=\"1. Na loja do seu navegador pesquise pela extensão Metamask\" />\n                <Card image={tutorial2} instruction=\"2. Clique em adicionar extensão\" />\n                <Card image={tutorial3} instruction=\"3. Abrirá a tela de boas vindas, clique em próximos passos\" />\n                <Card image={tutorial4} instruction=\"4. (Se não tiver) crie uma carteira metamask\" />\n                <Card image={tutorial5} instruction=\"5. O Metamask dirá o que ele terá acesso em sua máquina, clique em I agree para a aplicação funcionar\" />\n                <Card image={tutorial6} instruction=\"6. Crie uma senha de no mínimo 8 caracteres e marque a caixinha dos termos de uso\" />\n                <Card image={tutorial7} instruction=\"7. Aparecerá um jogo de palavras que é uma chave de backup, veja se quiser, mas pode pular (é possível recuperar essa chave depois)\" />\n                <Card image={tutorial8} instruction=\"8. O Metamask abrirá a tela inicial\" />\n                <Card image={tutorial9} instruction=\"9. Troque para a Rede de Testes Rinkeby e dê F5 para abrir a aplicação\" />\n            </div>\n            <br />\n        </div>\n    )\n}\n\nexport default Tutorial","import React from \"react\";\nimport Main from \"./pages/Main\";\nimport Tutorial from \"./pages/Tutorial\";\nimport { Route, Switch } from 'react-router-dom';\n\nconst Routes = ({ status, config }) => {\n    return (\n        <Switch>\n            <Route exact path=\"/\">\n                <div className=\"App\">\n                    <br />\n                    <Main status={status} config={config} />\n                    <br />\n                </div>\n\n            </Route>\n            <Route path=\"/tutorial\" component={Tutorial} />\n        </Switch>\n    )\n}\n\nexport default Routes;","import React, { Component } from \"react\";\nimport StreamingService from \"./contracts/StreamingService.json\";\nimport getWeb3 from \"./getWeb3\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./App.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Routes from \"./Routes\";\n\nclass App extends Component {\n  state = { web3: null, accounts: null, contract: null };\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = StreamingService.networks[networkId];\n      const instance = new web3.eth.Contract(\n        StreamingService.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, accounts, contract: instance }, this.runExample);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      console.error(error);\n    }\n  };\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Routes status={this.state.web3} config={{ accounts: this.state.accounts, contract: this.state.contract }} />\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}